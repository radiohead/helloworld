name: "Release build"

on:
  push:
    tags:
      # Push events to matching v*, i.e. v1.0, v20.15.10
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: ["darwin", "linux", "freebsd"]
        arch: ["386", "amd64"]
    env:
      GOOS: ${{ matrix.os }}
      GOARCH: ${{ matrix.arch }}
      GONAME: radiohead-helloworld-${{ github.ref }}-${{ matrix.os }}-${{ matrix.arch }}
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v2
      - name: "Setup Go environment"
        uses: actions/setup-go@v1
        with:
          go-version: "1.13"
      - name: "Create build artifact"
        run: |
          make test && \
          make build -e && \
          tar -czvf ${GONAME}.tar.gz ${GONAME}
      - name: "Upload build artifact"
        uses: actions/upload-artifact@v1
        with:
          name: radiohead-helloworld-${{ github.ref }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
          path: radiohead-helloworld-${{ github.ref }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz

  create_release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: "Create release"
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  upload_assets:
    runs-on: ubuntu-latest
    needs: create_release
    strategy:
      matrix:
        os: ["darwin", "linux", "freebsd"]
        arch: ["386", "amd64"]
    env:
      artifact_name: radiohead-helloworld-${{ github.ref }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
    steps:
      - name: "Download build artifact"
        uses: actions/download-artifact@v1
        with:
          name: radiohead-helloworld-${{ github.ref }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
          path: radiohead-helloworld-${{ github.ref }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
      - name: "Add build artifact to release"
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object,
          # which include a `upload_url`.
          #
          # See this blog post for more info:
          # https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: radiohead-helloworld-${{ github.ref }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
          asset_name: radiohead-helloworld-${{ github.ref }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
          asset_content_type: application/gzip
